03-02-2017:

- Sometimes we want to two (or more) different code paths depending on the
  result of the initial expression.  We can do this with an "else" part to the
  if:
    
    if (expr) statement1
    else statement2

  This will execute statement1 if expr is true, or it will execute statement2
  if expr is false.  Either or both of statement1 or 2 can be compound
  statements:
  
    if (expr) {
      statements;
    } else {
      statements;
    }

  ex:
    // Make an "alias" for console.log() called "print"
    var print=console.log;

    if (a < b) {
      print(a + " is less than " + b);
    } else if (a > b) {
      print(a + " is greater than " + b);
    } else {
      print(a + " is equal to " + b);
    }

More numbers:
============
A number is a polynomial in the form:

  N = a_n*x^n + a_{n-1}*x^{n-1} + ... + a_1*x + a_0
  or:
  N = sum_{i=0}^n a_i*x^i

  where:
   x is the base and:
   a_n, a_{n-1}, ... ,a_0 are constants modulo the base

Base 10 numbers:
  x = 10
  0 <= a_i <= 9

  404 = 4*10^2 + 0*10^1 + 4*10^0
  9261 = 9*10^3 + 2*10^2 + 6*10 + 1

  Powers of 10:
  10^0	1	10^3	1000	10^6	a million
  10^1	10	10^4	10000	10^9	a billion
  10^2	100	10^5	100000	10^12	a trillion

Base 2 numbers (binary):
  x = 2
  0 <= a_i <= 1
  100101 = 1*2^5 + 0*2^4 + 0*2^3 + 1*2^2 + 0*2 + 1

  Powers of 2:
  2^0	1	2^4	16	2^8	256	2^12	4096
  2^1	2	2^5	32	2^9	512	2^13	8192
  2^2	4	2^6	64	2^10	1024	2^14	16384
  2^3	8	2^7	128	2^11	2048	2^15	32768

  - Convert some binary numbers to base 10.
  - Sometimes prefixed with a 0b to indicate a binary number.

Base 8 (Octal):
  x = 8
  0 <= a_i <= 7
  755 = 7*8^2 + 5*8 + 5
  
  Powers of 8:
  8^0	1	8^3	512
  8^1	8	8^4	4096
  8^2	64	8^5	32768
  
  - An octal number represents a 3 digit binary number.
  - Usually prefixed with a leading 0 to indicate octal.

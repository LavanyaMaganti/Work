04-18-2017:

    var elmt = "z";
    if (elmt in point) console.log("point contains " + elmt);

    var emp = [];
    emp[991000000] = 'Steve Baker';
    ...
    var empid = 991000000;
    if (empid in emp) console.log(emp[empid]);

- Remove a key from an object using the delete operator:

  delete point['z'];
  - Removes 'z' from point.

for-in:
======

  for(<variable> in <array|object>) <statement>;
  - Iterates over the properties (indexes or keys) in an array or object,
    placing them in the <variable> one at a time.  Also skips over undefined
    sections (holes) in an array.

ex:

  var arr = ["one", "two", "three"];
  for(idx in arr) {
    console.log(idx + " -> " + arr[idx]);
  }
  // Outputs:
  0 -> "one"
  1 -> "two"
  2 -> "three"

  var arr = ["one", "two", , , "three"];
  ...
  // Outputs:
  0 -> "one"
  1 -> "two"
  4 -> "three"

- Using for-in on an object:

  var point = { x:10, y:15, z:-10 };
  for (key in point) {
    console.log(key + " -> " + point[key]);
  }

Nested Loops:
============
- Loops that are inside of other loops are called nested loops.
- The inner Loop runs completely for each iteration of the outer loop.

Examples:

  for(var row = 1; row <= 4; row++) {			// Outputs:
    var s = "";						// ****
    for(var col = 0; col < 5-row; col++) s += "*";	// ***
    console.log(s);					// **
  }							// *

  << How many "steps" does this take?  How many iterations of the outer
     loop? How many of the inner loop? >>

  // Creates a 2 dimensional matrix where each row/column position is equal
  // to the row times the column.
  var m = [];
  for(var row = 0; row <= 10; row++) {
    m[row] = [];
    for(var col = 0; col <= 10; col++) {
      m[row][col] = row*col;
    }
  }
  console.log(m);

  Print all the hex numbers from 00 to FF:

  var hex = "0123456789ABCDEF";
  for(var a = 0; a < 16; a++) {
    for(var b = 0; b < 16; b++) {
      console.log(hex[a] + hex[b]);
    }
  }

